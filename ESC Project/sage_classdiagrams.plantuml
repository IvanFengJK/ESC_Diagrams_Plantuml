@startuml sage_use_cases
hide empty methods
!theme toy



class "Unauthenticated user" as notLoggedIn {
    - signup()
    - login()


}

class "Authenticated user" as loggedIn {
    - logout()
    - viewAllRequests()
    - sendRequest()
    - cancelRequest()
    - denyRequest()
    - acceptRequest()
    - shareProfile()
    - hideProfile()
    - editProfile()
    - limitConnections()
    - viewProfile()
    - searchForSages()
    - askQuestion()
    - createPost()
    - upvotePost()

}


class "Apprentice (mentee)" as apprentice {

}
class "Sage (mentor)" as sage {
    - createAMA()
    - answerQuestion()
}

class "User" as user {
    + result: Complex Number
    + username: String
    + chat_id: String
    + profile_id: String
    + realm_id: String
    + first_name: String
    + last_name: String
    + name: String
    + email: String
    + role: String
    + birth_year: Integer
    + gender: String
    + profile_picture: String
    + learn: Array[String]
    + share: Array[String]
    + hobbies: Array[String]
    + experience: Array[String]
    + reason: String
    + course_of_study: Array[String]
    + references: Object
    + max_requests: Integer
    + linkedin: String
    + profile_shared: Boolean
    + is_tnc_accepted: Boolean
    + is_banned: Boolean
    + OTP_time: Date
    + OTP: String
    + time: Date
    + time_formatted: String
    + time_verified: Date
    + time_verified_formatted: String
    + time_created: Date

    + viewAllPosts()
    + filterPosts()
    + reportPost()
    + sharePost()
}

    class "Request" as request {
    + req_id: String
    + requester: String
    + sharer: String
    + requester_chat_id: String
    + sharer_chat_id: String
    + requester_profile_id: String
    + sharer_profile_id: String
    + requester_name: String
    + sharer_name: String
    + participants: Array[String]
    + is_premium: Boolean  
    + purpose_of_req: String
    + time_sent: Date
    + time_sent_formatted: String
    + time_ack: Date
    + time_ack_formatted: String
    + meeting_conducted_requester: Boolean
    + meeting_conducted_sharer: Boolean
}

class "Message" as message {
    + id: String
    + content: String
    + chat_id: String
    + sender_profile_id: String
    + sender_name: String
    + time_sent: Date
    + type: String

}

class "Chat" as chat {
    + id: String
    + participants: Array[String]
    + last_updated: Date
    + last_message: String
    + last_message_type: String
    + last_sender_name: String
    + last_sender_profile_id: String

    - sendMessage()
}

' Implemented as an abstract class because "Ask Me Anything" sessions & posts are closely related
class "Abstract Post" as abstractPost {
    + id: String
    + type: String
    + chat_id: String
    + profile_id: String
    + name: String
    + username: String
    + email: String
    + is_member: Boolean
    + time_expired: Date
    + time_sent: Date
    + time_sent_formatted: String
}

' Implemented as an interface because comment & question classes are unrelated
class "Abstract Comment" as abstractComment {
    + id: String
    + parent_id: String
    + chat_id: String
    + name: String
    + profile_id: String
    + email: String
    + type: String
    + content: String
    + is_member: Boolean
    + time_sent: Date
    + time_sent_formatted: String

}



class "Post" as post extends abstractPost {
}

class "Ask Me Anything session" as ama extends abstractPost {
    + ama_role: String
    + ama_topic: String
    + message_id: String
}



class "Comment"  as comment extends abstractComment {
    + type: "post"
}

class "Question" as question extends abstractComment {
    + type: "ama"
}

class "Answer" as answer {
    + replier_chat_id: String
    + replier_name: String
    + replier_profile_id: String
    + replier_email: String
    + reply: String
    + time_replied: Date
    + time_replied_formatted: String
}











' Authentication relationships
notLoggedIn --|> user
loggedIn --|> user
apprentice --|> loggedIn
sage --|> loggedIn

' Relationships for post | comment | question are found at their respective classes
answer --|> question


loggedIn -- "0..*" request
loggedIn -- "0..*" question
loggedIn -- "0..*" post
post -- "0..*" comment
ama -- "0..*" question
question -- "0..*" answer
loggedIn -- "0..*" chat
chat -- "0..*" message
sage -- "0..*" ama
sage -- "0..*" answer


@enduml